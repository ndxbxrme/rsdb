{
  "version": 3,
  "file": "local-web.js",
  "sourceRoot": "../src/",
  "sources": [
    "local-web.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "Readable = require('stream').Readable\r\nWritable = require('stream').Writable\r\n\r\nmodule.exports = (config) ->\r\n  clean = (key) ->\r\n    key = key.replace /:/g, 'IDBI'\r\n    key.replace /\\//g, 'IIDI'\r\n  unclean = (key) ->\r\n    key = key.replace /IDBI/g, ':'\r\n    key = key.replace /IIDI/g, '/'\r\n    #regex = new RegExp '^' + path.join(config.localStorage) + '\\\\\\/'\r\n    #key.replace regex, ''\r\n  checkDataDir: ->\r\n    return config.localStorage\r\n  keys: (from, prefix) ->\r\n    allkeys = []\r\n    i = -1\r\n    while i++ < config.localStorage.length - 1\r\n      allkeys.push config.localStorage.key i\r\n    re = new RegExp '^' + clean(prefix)\r\n    filteredkeys = allkeys.filter (key) ->\r\n      re.test key\r\n    new Promise (resolve, reject) ->\r\n      if filteredkeys\r\n        i = -1\r\n        count = 0\r\n        gotFrom = not from\r\n        output = \r\n          Contents: []\r\n          IsTruncated: false\r\n        while ++i < filteredkeys.length and count < 1000\r\n          if gotFrom\r\n            output.Contents.push\r\n              Key: unclean filteredkeys[i]\r\n            count++\r\n          else\r\n            if unclean(filteredkeys[i]) is from\r\n              gotFrom = true\r\n        if i < filteredkeys.length\r\n          output.IsTruncated = true\r\n        resolve output\r\n      else\r\n        resolve\r\n          Contents: []\r\n          IsTruncated: false\r\n  del: (key) ->\r\n    uri = clean(key)\r\n    config.localStorage.removeItem uri\r\n    #fs.unlink uri\r\n  getReadStream: (key) ->\r\n    uri = clean(key)\r\n    text = config.localStorage.getItem uri\r\n    throw 'nodata' if not text\r\n    s = new Readable()\r\n    s.push decodeURIComponent escape atob text\r\n    s.push null\r\n    s\r\n    #fs.createReadStream uri\r\n  getWriteStream: (key) ->\r\n    uri = clean(key)\r\n    #fs.createWriteStream uri\r\n    text = ''\r\n    w = new Writable\r\n      emitClose: true\r\n    w._write = (chunk, encoding, done) ->\r\n      text += chunk\r\n      done()\r\n    w.end = (chunk, encoding, done) ->\r\n      w.writable = false\r\n      text += chunk if chunk\r\n      config.localStorage.setItem uri, btoa unescape encodeURIComponent text\r\n      w = null\r\n    w\r\n        \r\n      "
  ]
}