{
  "version": 3,
  "file": "local-fs.js",
  "sourceRoot": "../src/",
  "sources": [
    "local-fs.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "fs = require 'fs-extra'\r\nglob = require 'glob'\r\npath = require 'path'\r\n\r\nmodule.exports = (config) ->\r\n  clean = (key) ->\r\n    key = key.replace /:/g, 'IDBI'\r\n    key.replace /\\//g, 'IIDI'\r\n  unclean = (key) ->\r\n    key = key.replace /IDBI/g, ':'\r\n    key = key.replace /IIDI/g, '/'\r\n    regex = new RegExp '^' + path.join(config.localStorage) + '\\\\\\/'\r\n    key.replace regex, ''\r\n  checkDataDir: ->\r\n    if config.localStorage\r\n      if not fs.existsSync path.join(config.localStorage)\r\n        fs.mkdirSync path.join(config.localStorage) \r\n  keys: (from, prefix) ->\r\n    ls = path.join(config.localStorage).replace(/\\\\/g, '/') + '/'\r\n    new Promise (resolve, reject) ->\r\n      glob path.join(config.localStorage, clean(prefix) + '*.json'), (e, r) ->\r\n        return reject e if e\r\n        i = -1\r\n        count = 0\r\n        gotFrom = not from\r\n        output = \r\n          Contents: []\r\n          IsTruncated: false\r\n        while ++i < r.length and count < 1000\r\n          r[i] = r[i].replace ls, ''\r\n          if gotFrom\r\n            output.Contents.push\r\n              Key: unclean r[i].replace('.json', '')\r\n            count++\r\n          else\r\n            if unclean(r[i]) is from + '.json'\r\n              gotFrom = true\r\n        if i < r.length\r\n          output.IsTruncated = true\r\n        resolve output\r\n  del: (key) ->\r\n    uri = path.join(config.localStorage, \"#{clean(key)}.json\")\r\n    fs.unlink uri\r\n  put: (key, o) ->\r\n    uri = path.join(config.localStorage, \"#{clean(key)}.json\")\r\n    fs.writeFile uri, JSON.stringify(o)\r\n  get: (key) ->\r\n    uri = path.join(config.localStorage, \"#{clean(key)}.json\")\r\n    new Promise (resolve, reject) ->\r\n      try\r\n        text = await fs.readFile uri, 'utf8'\r\n      catch e\r\n        return reject e\r\n      try\r\n        data = JSON.parse r\r\n      catch e\r\n        return reject e\r\n      resolve data\r\n  getReadStream: (key) ->\r\n    uri = path.join(config.localStorage, \"#{clean(key)}.json\")\r\n    fs.createReadStream uri\r\n  getWriteStream: (key) ->\r\n    uri = path.join(config.localStorage, \"#{clean(key)}.json\")\r\n    fs.createWriteStream uri\r\n      \r\n        \r\n      "
  ]
}